services:
  traefik:
    image: "traefik:3.1"
    user: "${DOCKER_PUID:-0}:${DOCKER_PGID:-0}"
    command:
      - "--log=true" # To remove
      - "--log.level=DEBUG" # To remove
      - "--global.checknewversion=true"
      - "--global.sendanonymoususage=false"
      - "--api=true"
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--metrics.prometheus=true"
      - "--providers.swarm.endpoint=unix:///var/run/docker.sock"
      - "--providers.swarm.exposedbydefault=false"
      - "--providers.swarm.network=${DOCKER_NETWORK:?error}"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.http.tls=true"
      - "--entrypoints.websecure.http.tls.certresolver=letsencrypt"
      - "--entrypoints.websecure.http.tls.domains[0].main=${TRAEFIK_DOMAIN_NAME:?error}"
      - "--entrypoints.websecure.http.tls.domains[0].sans=*.${TRAEFIK_DOMAIN_NAME:?error}"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory" # To remove
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.email=${DUCKDNS_EMAIL:?error}"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=duckdns"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=120"
      # - "--certificatesresolvers.letsencrypt.acme.dnschallenge.disablepropagationcheck=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DUCKDNS_TOKEN_FILE=/run/secrets/duckdns_token
      - DUCKDNS_PROPAGATION_TIMEOUT=120
      - DUCKDNS_POLLING_INTERVAL=30
      - DUCKDNS_TTL=200
    secrets:
      - duckdns_token
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_certs:/letsencrypt
    networks:
      - network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.traefik.rule=Host(`traefik.${TRAEFIK_DOMAIN_NAME:?error}`)"
        - "traefik.http.routers.traefik.entrypoints=websecure"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.routers.traefik.middlewares=auth"
        - "traefik.http.middlewares.auth.basicauth.users=${BASICAUTH_USERNAME:?error}:${BASICAUTH_PASSWORD_HASH:?error}"

secrets:
  duckdns_token:
    external: true

volumes:
  traefik_certs:

networks:
  network:
    name: ${DOCKER_NETWORK:?error}
    external: true
