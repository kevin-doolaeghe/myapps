services:
  agent:
    image: portainer/agent:latest
    user: "${DOCKER_PUID:-0}:${DOCKER_PGID:-0}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - ${DOCKER_NETWORK:?error}
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.platform.os == linux

  portainer:
    image: portainer/portainer-ce:latest
    user: "${DOCKER_PUID:-0}:${DOCKER_PGID:-0}"
    command: "-H tcp://tasks.agent:9001 --tlsskipverify"
    ports:
      - "8000:8000/tcp"
      - "9443:9443/tcp"
    volumes:
      - portainer_data:/data
    networks:
      - ${DOCKER_NETWORK:?error}
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.rule=Host(`portainer.${TRAEFIK_DOMAIN_NAME:?error}`)"
        - "traefik.http.routers.portainer.entrypoints=websecure"
        - "traefik.http.routers.portainer.tls.certresolver=dnschallenge"
        - "traefik.http.services.portainer.loadbalancer.server.port=9443"

volumes:
  portainer_data:

networks:
  ${DOCKER_NETWORK:?error}:
    external: true
