services:
  grafana:
    image: grafana/grafana:latest
    hostname: "{{.Node.Hostname}}"
    user: "${DOCKER_PUID:-0}:${DOCKER_PGID:-0}"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD:-admin}
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - network
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.rule=Host(`grafana.${TRAEFIK_DOMAIN_NAME:?error}`)"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
  influxdb:
    image: influxdb:1.8
    hostname: "{{.Node.Hostname}}"
    user: "${DOCKER_PUID:-0}:${DOCKER_PGID:-0}"
    environment:
      - INFLUXDB_DB=${INFLUXDB_DB:-influxdb}
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER:-admin}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD:-admin}
    volumes:
      - influxdb_data:/var/lib/influxdb
    networks:
      - network
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
  telegraf:
    image: telegraf:latest
    hostname: "{{.Node.Hostname}}"
    user: "${DOCKER_PUID:-0}:${DOCKER_PGID:-0}"
    environment:
      - HOST_ETC=/hostfs/etc
      - HOST_PROC=/hostfs/proc
      - HOST_SYS=/hostfs/sys
      - HOST_VAR=/hostfs/var
      - HOST_RUN=/hostfs/run
      - HOST_MOUNT_PREFIX=/hostfs
      - INFLUXDB_DB=${INFLUXDB_DB:-influxdb}
      - INFLUXDB_ADMIN_USER=${INFLUXDB_ADMIN_USER:-admin}
      - INFLUXDB_ADMIN_PASSWORD=${INFLUXDB_ADMIN_PASSWORD:-admin}
    volumes:
      - /:/hostfs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - telegraf_config:/etc/telegraf
    networks:
      - network
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager

volumes:
  grafana_data:
    name: grafana_data
  influxdb_data:
    name: influxdb_data
  telegraf_config:
    name: telegraf_config

networks:
  network:
    name: ${DOCKER_NETWORK:?error}
    external: true
